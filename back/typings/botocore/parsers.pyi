"""
This type stub file was generated by pyright.
"""

from logging import Logger
from typing import Any, Callable, Dict, Mapping, Optional, Type
from botocore.model import Shape

LOG: Logger = ...
DEFAULT_TIMESTAMP_PARSER = ...
class ResponseParserFactory:
    def __init__(self) -> None:
        ...
    
    def set_parser_defaults(self, **kwargs: Any) -> None:
        ...
    
    def create_parser(self, protocol_name: str) -> ResponseParser:
        ...
    


def create_parser(protocol: str) -> ResponseParser:
    ...

class ResponseParserError(Exception):
    ...


class ResponseParser:
    DEFAULT_ENCODING: str = ...
    EVENT_STREAM_PARSER_CLS: Optional[Type[ResponseParser]] = ...
    def __init__(self, timestamp_parser: Optional[Callable[[str], Any]] = ..., blob_parser: Optional[Callable[[str], Any]] = ...) -> None:
        ...
    
    def parse(self, response: Mapping[str, Any], shape: Shape) -> Any:
        ...
    


class BaseXMLResponseParser(ResponseParser):
    def __init__(self, timestamp_parser: Optional[Callable[[str], Any]] = ..., blob_parser: Optional[Callable[[str], Any]] = ...) -> None:
        ...
    


class QueryParser(BaseXMLResponseParser):
    ...


class EC2QueryParser(QueryParser):
    ...


class BaseJSONParser(ResponseParser):
    ...


class BaseEventStreamParser(ResponseParser):
    ...


class EventStreamJSONParser(BaseEventStreamParser, BaseJSONParser):
    ...


class EventStreamXMLParser(BaseEventStreamParser, BaseXMLResponseParser):
    ...


class JSONParser(BaseJSONParser):
    ...


class BaseRestParser(ResponseParser):
    ...


class RestJSONParser(BaseRestParser, BaseJSONParser):
    ...


class RestXMLParser(BaseRestParser, BaseXMLResponseParser):
    ...


PROTOCOL_PARSERS: Dict[str, ResponseParser]
