"""
This type stub file was generated by pyright.
"""

import sys
from types import TracebackType
from typing import Any, Literal, Mapping, Optional, Type, TypeVar
from botocore.client import BaseClient

if sys.version_info >= (3, 9):
    ...
else:
    ...
class _ANY:
    def __eq__(self, other: object) -> Literal[True]:
        ...
    
    def __ne__(self, other: object) -> Literal[False]:
        ...
    


ANY: _ANY
_R = TypeVar("_R")
class Stubber:
    def __init__(self, client: BaseClient) -> None:
        ...
    
    def __enter__(self: _R) -> _R:
        ...
    
    def __exit__(self, exception_type: Optional[Type[BaseException]], exception_value: Optional[BaseException], traceback: Optional[TracebackType]) -> None:
        ...
    
    def activate(self) -> None:
        ...
    
    def deactivate(self) -> None:
        ...
    
    def add_response(self, method: str, service_response: Mapping[str, Any], expected_params: Optional[Mapping[str, Any]] = ...) -> None:
        ...
    
    def add_client_error(self, method: str, service_error_code: str = ..., service_message: str = ..., http_status_code: int = ..., service_error_meta: Optional[Mapping[str, Any]] = ..., expected_params: Optional[Mapping[str, Any]] = ..., response_meta: Optional[Mapping[str, Any]] = ..., modeled_fields: Optional[Mapping[str, Any]] = ...) -> None:
        ...
    
    def assert_no_pending_responses(self) -> None:
        ...
    


