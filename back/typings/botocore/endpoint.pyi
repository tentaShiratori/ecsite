"""
This type stub file was generated by pyright.
"""

from logging import Logger
from typing import Any, Mapping, Optional, Type
from botocore.hooks import BaseEventHooks
from botocore.httpsession import URLLib3Session as URLLib3Session
from botocore.model import OperationModel, ServiceModel

logger: Logger = ...
history_recorder: Any
DEFAULT_TIMEOUT: int
MAX_POOL_CONNECTIONS: int
def convert_to_response_dict(http_response: Any, operation_model: OperationModel) -> Any:
    ...

class Endpoint:
    def __init__(self, host: str, endpoint_prefix: str, event_emitter: BaseEventHooks, response_parser_factory: Optional[Any] = ..., http_session: Optional[URLLib3Session] = ...) -> None:
        ...
    
    def close(self) -> None:
        ...
    
    def make_request(self, operation_model: Any, request_dict: Any) -> Any:
        ...
    
    def create_request(self, params: Mapping[str, Any], operation_model: Optional[OperationModel] = ...) -> Any:
        ...
    
    def prepare_request(self, request: Any) -> Any:
        ...
    


class EndpointCreator:
    def __init__(self, event_emitter: BaseEventHooks) -> None:
        ...
    
    def create_endpoint(self, service_model: ServiceModel, region_name: str, endpoint_url: str, verify: Optional[Any] = ..., response_parser_factory: Optional[Any] = ..., timeout: float = ..., max_pool_connections: Any = ..., http_session_cls: Type[URLLib3Session] = ..., proxies: Optional[Any] = ..., socket_options: Optional[Any] = ..., client_cert: Optional[Any] = ..., proxies_config: Optional[Any] = ...) -> Any:
        ...
    


