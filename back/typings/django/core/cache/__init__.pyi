"""
This type stub file was generated by pyright.
"""

from django.core import signals
from django.core.cache.backends.base import BaseCache, CacheKeyWarning, InvalidCacheBackendError, InvalidCacheKey
from django.utils.connection import BaseConnectionHandler, ConnectionProxy
from django.utils.module_loading import import_string

"""
Caching framework.

This package defines set of cache backends that all conform to a simple API.
In a nutshell, a cache is a set of values -- which can be any object that
may be pickled -- identified by string keys.  For the complete API, see
the abstract BaseCache class in django.core.cache.backends.base.

Client code should use the `cache` variable defined here to access the default
cache backend and look up non-default cache backends in the `caches` dict-like
object.

See docs/topics/cache.txt for information on the public API.
"""
__all__ = ["cache", "caches", "DEFAULT_CACHE_ALIAS", "InvalidCacheBackendError", "CacheKeyWarning", "BaseCache", "InvalidCacheKey"]
DEFAULT_CACHE_ALIAS = ...
class CacheHandler(BaseConnectionHandler):
    settings_name = ...
    exception_class = InvalidCacheBackendError
    def create_connection(self, alias): # -> Any:
        ...
    


caches = ...
cache = ...
def close_caches(**kwargs): # -> None:
    ...

