"""
This type stub file was generated by pyright.
"""

import os
from ctypes import Structure, Union, c_void_p

"""
Portable file locking utilities.

Based partially on an example by Jonathan Feignberg in the Python
Cookbook [1] (licensed under the Python Software License) and a ctypes port by
Anatoly Techtonik for Roundup [2] (license [3]).

[1] https://code.activestate.com/recipes/65203/
[2] https://sourceforge.net/p/roundup/code/ci/default/tree/roundup/backends/portalocker.py  # NOQA
[3] https://sourceforge.net/p/roundup/code/ci/default/tree/COPYING.txt

Example Usage::

    >>> from django.core.files import locks
    >>> with open('./file', 'wb') as f:
    ...     locks.lock(f, locks.LOCK_EX)
    ...     f.write('Django')
"""
__all__ = ("LOCK_EX", "LOCK_SH", "LOCK_NB", "lock", "unlock")
if os.name == "nt":
    LOCK_SH = ...
    LOCK_NB = ...
    LOCK_EX = ...
    PVOID = c_void_p
    class _OFFSET(Structure):
        _fields_ = ...
    
    
    class _OFFSET_UNION(Union):
        _anonymous_ = ...
        _fields_ = ...
    
    
    class OVERLAPPED(Structure):
        _anonymous_ = ...
        _fields_ = ...
    
    
    LPOVERLAPPED = ...
    LockFileEx = ...
    UnlockFileEx = ...
    def lock(f, flags): # -> bool:
        ...
    
    def unlock(f): # -> bool:
        ...
    
else:
    ...
