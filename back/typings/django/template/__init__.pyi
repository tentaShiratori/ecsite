"""
This type stub file was generated by pyright.
"""

from .engine import Engine
from .utils import EngineHandler
from .base import Node, NodeList, Origin, Template, Variable, VariableDoesNotExist
from .context import Context, ContextPopException, RequestContext
from .exceptions import TemplateDoesNotExist, TemplateSyntaxError
from .library import Library
from . import autoreload

"""
Django's support for templates.

The django.template namespace contains two independent subsystems:

1. Multiple Template Engines: support for pluggable template backends,
   built-in backends and backend-independent APIs
2. Django Template Language: Django's own template engine, including its
   built-in loaders, context processors, tags and filters.

Ideally these subsystems would be implemented in distinct packages. However
keeping them together made the implementation of Multiple Template Engines
less disruptive .

Here's a breakdown of which modules belong to which subsystem.

Multiple Template Engines:

- django.template.backends.*
- django.template.loader
- django.template.response

Django Template Language:

- django.template.base
- django.template.context
- django.template.context_processors
- django.template.loaders.*
- django.template.debug
- django.template.defaultfilters
- django.template.defaulttags
- django.template.engine
- django.template.loader_tags
- django.template.smartif

Shared:

- django.template.utils

"""
engines = ...
__all__ = ("Engine", "engines")
__all__ += ("Template", "Context", "RequestContext")
