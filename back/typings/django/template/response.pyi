"""
This type stub file was generated by pyright.
"""

from django.http import HttpResponse

class ContentNotRenderedError(Exception):
    ...


class SimpleTemplateResponse(HttpResponse):
    rendering_attrs = ...
    def __init__(self, template, context=..., content_type=..., status=..., charset=..., using=..., headers=...) -> None:
        ...
    
    def __getstate__(self): # -> dict[str, Any]:
        """
        Raise an exception if trying to pickle an unrendered response. Pickle
        only rendered data, not the data used to construct the response.
        """
        ...
    
    def resolve_template(self, template): # -> Any:
        """Accept a template object, path-to-template, or list of paths."""
        ...
    
    def resolve_context(self, context):
        ...
    
    @property
    def rendered_content(self): # -> Any:
        """Return the freshly rendered content for the template and context
        described by the TemplateResponse.

        This *does not* set the final content of the response. To set the
        response content, you must either call render(), or set the
        content explicitly using the value of this property.
        """
        ...
    
    def add_post_render_callback(self, callback): # -> None:
        """Add a new post-rendering callback.

        If the response has already been rendered,
        invoke the callback immediately.
        """
        ...
    
    def render(self): # -> Self@SimpleTemplateResponse:
        """Render (thereby finalizing) the content of the response.

        If the content has already been rendered, this is a no-op.

        Return the baked response instance.
        """
        ...
    
    @property
    def is_rendered(self): # -> bool:
        ...
    
    def __iter__(self): # -> Iterator[bytes]:
        ...
    
    @property
    def content(self): # -> bytes:
        ...
    
    @content.setter
    def content(self, value): # -> None:
        """Set the content for the response."""
        ...
    


class TemplateResponse(SimpleTemplateResponse):
    rendering_attrs = ...
    def __init__(self, request, template, context=..., content_type=..., status=..., charset=..., using=..., headers=...) -> None:
        ...
    


