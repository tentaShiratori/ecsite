"""
This type stub file was generated by pyright.
"""

import logging

request_logger = ...
DEFAULT_LOGGING = ...
def configure_logging(logging_config, logging_settings): # -> None:
    ...

class AdminEmailHandler(logging.Handler):
    """An exception log handler that emails log entries to site admins.

    If the request is passed as the first argument to the log record,
    request data will be provided in the email report.
    """
    def __init__(self, include_html=..., email_backend=..., reporter_class=...) -> None:
        ...
    
    def emit(self, record): # -> None:
        ...
    
    def send_mail(self, subject, message, *args, **kwargs): # -> None:
        ...
    
    def connection(self): # -> Any:
        ...
    
    def format_subject(self, subject):
        """
        Escape CR and LF characters.
        """
        ...
    


class CallbackFilter(logging.Filter):
    """
    A logging filter that checks the return value of a given callable (which
    takes the record-to-be-logged as its only parameter) to decide whether to
    log a record.
    """
    def __init__(self, callback) -> None:
        ...
    
    def filter(self, record): # -> Literal[1, 0]:
        ...
    


class RequireDebugFalse(logging.Filter):
    def filter(self, record): # -> bool:
        ...
    


class RequireDebugTrue(logging.Filter):
    def filter(self, record): # -> Any:
        ...
    


class ServerFormatter(logging.Formatter):
    default_time_format = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    def format(self, record): # -> str:
        ...
    
    def uses_server_time(self): # -> bool:
        ...
    


def log_response(message, *args, response=..., request=..., logger=..., level=..., exception=...): # -> None:
    """
    Log errors based on HttpResponse status.

    Log 5xx responses as errors and 4xx responses as warnings (unless a level
    is given as a keyword argument). The HttpResponse status_code and the
    request are passed to the logger's extra parameter.
    """
    ...

