"""
This type stub file was generated by pyright.
"""

"""Functions to parse datetime objects."""
date_re = ...
time_re = ...
datetime_re = ...
standard_duration_re = ...
iso8601_duration_re = ...
postgres_interval_re = ...
def parse_date(value): # -> date | None:
    """Parse a string and return a datetime.date.

    Raise ValueError if the input is well formatted but not a valid date.
    Return None if the input isn't well formatted.
    """
    ...

def parse_time(value): # -> time | None:
    """Parse a string and return a datetime.time.

    This function doesn't support time zone offsets.

    Raise ValueError if the input is well formatted but not a valid time.
    Return None if the input isn't well formatted, in particular if it
    contains an offset.
    """
    ...

def parse_datetime(value): # -> datetime | None:
    """Parse a string and return a datetime.datetime.

    This function supports time zone offsets. When the input contains one,
    the output uses a timezone with a fixed offset from UTC.

    Raise ValueError if the input is well formatted but not a valid datetime.
    Return None if the input isn't well formatted.
    """
    ...

def parse_duration(value): # -> timedelta | None:
    """Parse a duration string and return a datetime.timedelta.

    The preferred format for durations in Django is '%d %H:%M:%S.%f'.

    Also supports ISO 8601 representation and PostgreSQL's day-time interval
    format.
    """
    ...

