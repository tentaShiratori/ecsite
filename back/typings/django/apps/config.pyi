"""
This type stub file was generated by pyright.
"""

from django.utils.functional import cached_property

APPS_MODULE_NAME = ...
MODELS_MODULE_NAME = ...
class AppConfig:
    """Class representing a Django application and its configuration."""
    def __init__(self, app_name, app_module) -> None:
        ...
    
    def __repr__(self): # -> str:
        ...
    
    @cached_property
    def default_auto_field(self): # -> Any:
        ...
    
    @classmethod
    def create(cls, entry): # -> AppConfig:
        """
        Factory that creates an app config from an entry in INSTALLED_APPS.
        """
        ...
    
    def get_model(self, model_name, require_ready=...):
        """
        Return the model with the given case-insensitive model_name.

        Raise LookupError if no model exists with this name.
        """
        ...
    
    def get_models(self, include_auto_created=..., include_swapped=...): # -> Generator[Unknown, None, None]:
        """
        Return an iterable of models.

        By default, the following models aren't included:

        - auto-created models for many-to-many relations without
          an explicit intermediate table,
        - models that have been swapped out.

        Set the corresponding keyword argument to True to include such models.
        Keyword arguments aren't documented; they're a private API.
        """
        ...
    
    def import_models(self): # -> None:
        ...
    
    def ready(self): # -> None:
        """
        Override this method in subclasses to run code when Django starts.
        """
        ...
    


